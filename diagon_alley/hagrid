#!/usr/bin/env python3
import time
import typing

HAGRID = """
................................................................................
................................................................................
...............................................:................................
...................................=@@@@@@@@@@:....::...........................
...............................@@###############@@.......:......................
.........................@@@@%#*#####################@@@...:....................
......................@@###############################*@@..::..................
....................:@####################################@..::.................
....................@######################################@..::................
...................@#######%##########################@###*@-.::................
...................@########@@#####################@@#######@..::...............
..................=@######*@-:::#@@@@@@@@@@@@@@@=::%@######*@..:::..............
.................%@######@+::::::::::::::::::::::::::@@#####*@:..::.............
...............@@#*#*@@%@::::::::::::::::::::::::::::::@@@@####@+..::...........
..............@########@-::::::::::::::::::::::::::::::@%########@..::..........
.............@#########@:::-#####:::::::::::::-#####::::@#########@ .::.........
............@%#########@:::#::::-#:::::::::::+#:::::#:::@#########@..::.........
............@##########@::::@@@@:::::::::::::::#@@@=::::@#########%%.:::........
.........:..@#########@@::::@@@@=::::::::::::::@@@@@:::-@##########@..::........
.........:..@#########@@*::::::::::::::::::::::::::::::@#@#########@..::........
...........@#########@@#@:::::::::::+@@@@@@:::::::::::*@#@##########@..::.......
......:..@@##########@##*@@::::::@@##@@@@@@#@@+::::::@%##@@##########@=..::.....
........@############@######@@@@###@=@+::+@#@#*#@@@@######@############@..::....
......+@#############@#############@@#-::-#@@#############@#############@..::...
......@##############@##################*#################@##############@..::..
...:..@##############@####################################@##############@..::..
...:..%@#############@###################################%@#############@:.:::..
....:...-@@@*########*@%#####################***########@@*######*#%@@@...-::...
.....:::.....%@@@@.@##+=%@@@@@@#@@@@########@@@@%@@@@@@==##@.:@@@@*.....--:::...
.......::::::......@======@===@+@###@@@@@@#####@*@===@=====+@......---:::::.....
...........::::::.=@======@====@@###@@#%@######@@===+@======@..---:.::::........
..............::..@=======@=====@####@-@@######@====*@======*@..:..=..::........
...............:..@+++++++@+====@%%%%@=**@%%%%%@====%#+++++++@..-.....::........
...............:...@::::%%======@@@@@@+*@@@@@@@@======@-:::-@...-.....::........
................::..*@@@+=======@####@%%#@#####@=======+@@@:..-::..-..::........
.................::..@==========@#####+#@######@==========@..-:::. -..::........
.................:..@*==========@@@@@@@@@@@@@@@@==========@:.-:::..:..::........
....................@@@@@@@@@@@@@%%%%%@@@@%%%%%@@@@@@@@@@@@@.::::.....::........
..................:.... ..:@@@@@@@@@@@@.*@@@@@@@@@@@@........::::..-. ::........
...................::::-..@%##########@.*@##########@@..---::::.::...:::........
.....................::: -@%%%%%%%%%%%@.*@%%%%%%%%%%%@..-:::......:::::.........
.......................:...............................-::......................
........................:::::::::::::::::::::::::::::::::.......................
.........................:::::::::::::::::::::::::::::::........................
"""


class bcolors:
    BLUE = "\033[94m"
    GREEN = "\033[92m"
    BOLD = "\033[1m"
    UNDERLINE = "\033[4m"
    ENDC = "\033[0m"


def text_question_correct(question: str, answer: str) -> bool:
    time.sleep(3)
    print("\n\n\n")
    print("Q: " + question)
    print("\n")

    response = input("Your answer: ")
    if response.lower().strip() == answer:
        print("Seems like it might really be you...")
        return True
    else:
        print("I'm afraid of a polyjuice imposter... not going to say anymore")
        return False


def choice_question_correct(
    question: str,
    options: typing.Dict[str, str],
    answer: str,
    *,
    more_questions=True,
) -> bool:
    time.sleep(3)
    print("\n\n\n")
    print("Q: " + question)
    for option in sorted(options):
        question = options[option]
        print("   {}: {}".format(option, question))
    print("\n")

    response = input("Your answer: ")
    if response.lower() == answer.lower():
        if more_questions:
            print("Seems like it might really be you...")
        return True
    else:
        print("I'm afraid of a polyjuice imposter... not going to say anymore")
        return False


def question_one_correct() -> bool:
    return choice_question_correct(
        "What is the best definition of abstraction?",
        {
            "A": "Weird over-priced art",
            "B": "Removing unnecessary details",
            "C": "A stomach workout",
        },
        "B",
    )


def question_two_correct() -> bool:
    return choice_question_correct(
        'What is the word "bit" short for?',
        {
            "A": "Bright lights",
            "B": "Bytes and Terabytes",
            "C": "Bits of a computer",
            "D": "Binary digit",
        },
        "D",
        more_questions=False,
    )


def run_hagrid() -> None:
    print(HAGRID)
    time.sleep(3)
    print("Harry, is that you? Can't be too careful!")
    print("\n")
    time.sleep(3)
    print("Answer these questions that only you would know...")

    if not question_one_correct():
        return

    if not question_two_correct():
        return

    print("\n\n\n")
    print("Phew, it's you! Hogwarts is in danger. First, you're going to need")
    print(f"""a new spell: {bcolors.UNDERLINE}ls -al{bcolors.ENDC}. It's like "revelio" (lumos on steroids) and""")
    print("will show you hidden objects.")
    print("\n\n\n")
    time.sleep(10)

    print(
        f"Notice that there is a SPACE between the spell ({bcolors.UNDERLINE}ls{bcolors.ENDC}) and what follows ({bcolors.UNDERLINE}-al{bcolors.ENDC})"
    )
    time.sleep(3)

    print("Let's try it now!")
    ls_al = input("What's the new spell: ")
    while ls_al != "ls -al":
        ls_al = input("Not quite.... let's try that again: ")

    print("\n\n\n")
    time.sleep(0.5)
    print("You got it! Now look at all the new stuff you can see in this directory:")
    time.sleep(2)
    print("drwxr-xr-x 4 root  root   128 Oct 14 15:15 .")
    print("drwxr-xr-x 1 root  root  4096 Oct 14 14:42 ..")
    print(f"-rw-r--r-- 1 harry harry   22 Oct 14 15:15 {bcolors.BOLD}.gold_coin_under_bench{bcolors.ENDC}")
    print(f"-rwxrwxr-x 1 harry harry 4919 Oct 14 15:15 {bcolors.GREEN}hagrid{bcolors.ENDC}")
    print("\n\n\n")
    time.sleep(2)
    print("Look at that! A shiny gold coin that was hiding right next to me!")
    time.sleep(5)
    print("\n\n\n")
    print(f"I'd STRONGLY suggest writing {bcolors.UNDERLINE}ls -al{bcolors.ENDC} in your spell book for when")
    print(f"a directory seems empty even after you use {bcolors.UNDERLINE}ls{bcolors.ENDC}.")
    print("\n\n\n")
    time.sleep(5)
    print("I'm waiting... are your writing?")
    print("\n\n\n")
    time.sleep(15)
    print(f"Ok, that's all I have for you. Apparate to Kings Crossing: {bcolors.BLUE}/kings_cross{bcolors.ENDC}")
    print("and go save Hogwarts!")
    time.sleep(5)


if __name__ == "__main__":
    run_hagrid()
